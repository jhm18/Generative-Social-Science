
#Generating Cleavland Chart in R Called from Julia
#Jonathan H. Morgan
#15 February 2019

#For more information: https://juliainterop.github.io/RCall.jl/latest/gettingstarted.html

using RCall

#Moving Julia Objects into R
z = 1
@rput z

#The reval function evaluates any given input string as R code in the R environment.
#The returned result is an RObject object.
jmtcars = reval("mtcars");
names(jmtcars)
jmtcars[:mpg]

#The robject function converts any julia object to an RObject.
robject(1)

#Cleavland Chart in R Called from Julia Using the R"""   """ Macro
R"""
source("~/R Resources/R Plotting Utilities & Resources/R Plot Utilities_13Dec2019.R")
source("~/R Resources/R Plotting Utilities & Resources/util.R")

library(readxl)
library(dplyr)
library(tidyr)

#Getting Data
supermarket <- read_excel("~/R Resources/R Plotting Utilities & Resources/R Plot Utilities Data/Supermarket Transactions.xlsx", sheet = "Data")

#Constructing Data
city_rev <- supermarket %>%
  group_by(City) %>%
  summarise(Revenue = sum(Revenue, na.rm = TRUE)) %>%
  arrange(Revenue) %>%
  mutate(City = factor(City, levels = .$City))

city_gender_rev <- supermarket %>%
  group_by(City, Gender) %>%
  summarise(Revenue = sum(Revenue, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(City = factor(City, levels = city_rev$City))

#Create data frame that identifies revenue differences over 20%
big_diff <- city_gender_rev %>%
  spread(Gender, Revenue) %>%
  group_by(City) %>%
  mutate(Max = max(F, M),
         Min = min(F, M),
         Diff = Max / Min - 1) %>%
  arrange(desc(Diff)) %>%
  filter(Diff > .2)

#Creating Labels
  right_label <- city_gender_rev %>%
  group_by(City) %>%
  arrange(desc(Revenue)) %>%
  top_n(1)

  left_label <- city_gender_rev %>%
  group_by(City) %>%
  arrange(desc(Revenue)) %>%
  slice(2)

#Filter the label data frames to only include those cities where the difference exceeds 20%
right_label <- dplyr::filter(right_label, City %in% big_diff$City)
left_label <- filter(left_label, City %in% big_diff$City)

#Filter the main data frame to only include those cities where the difference exceeds 20%.
highlight <- filter(city_gender_rev, City %in% big_diff$City)

# create a new label data frame
plot_label <- big_diff %>%
  select(City, Revenue = Max, Diff) %>%
  right_join(right_label)

#Cleveland Dot Plot: ggplot 2
library(ggplot2)        # for generating the visualizations

p <- ggplot(city_gender_rev, aes(Revenue, City)) +
  theme_minimal() +
  theme(axis.title = element_blank(),
        panel.grid.major.x = element_blank(),
        panel.grid.minor = element_blank(),
        axis.text.x = element_text(colour="black",size=12),
        axis.text.y = element_text(colour="black",size=12),
        legend.title = element_blank(),
        legend.justification = c(0, 1),
        legend.position = c(.1, 1.075),
        legend.background = element_blank(),
        legend.direction="horizontal",
        text = element_text(family = "Georgia"),
        plot.title = element_text(size = 20, margin = margin(b = 10)),
        plot.subtitle = element_text(size = 10, color = "darkslategrey", margin = margin(b = 25)),
        plot.caption = element_text(size = 8, margin = margin(t = 10), color = "grey70", hjust = 0)) +
  geom_line(aes(group = City), alpha = .3) +
  geom_point(aes(color = Gender), size = 2, alpha = .3) +
  geom_line(data = highlight, aes(group = City)) +
  geom_point(data = highlight, aes(color = Gender), size = 2) +
  scale_color_manual(labels = c("Female", "Male"), values=c("brown", "blue")) +
  scale_x_continuous(labels = scales::dollar, expand = c(0.02, 0),
                     limits = c(0, 10500),
                     breaks = seq(0, 10000, by = 2500)) +
  scale_y_discrete(expand = c(.02, 0)) +
  labs(title = "Total Revenue by City and Gender",
       subtitle = "Out of 23 cities, eight locations experience a 20% or greater difference \nin revenue generated by males versus females. Hidalgo experiences the \ngreatest difference with females generating 86% more revenue than males.") +
  geom_text(data = plot_label, aes(color = Gender,
  label = paste0("+", scales::percent(round(Diff, 2)))), size = 3, hjust = -.5)

p

"""
